<?php
/**
 *  Implementation of hoot_init()
 *  Disables caching for the join wizard
 **/
function fsp_join_init() {
  if (drupal_match_path($_GET['q'], 'fsp_join_wizard/*')) {
    $GLOBALS['conf']['cache'] = FALSE;   
  }
}

/**
 *  Implementation of hook_menu()
 **/
function fsp_join_menu() {
  $items['fsp_join_wizard'] = array(
      'title' => 'Join the FSP',
      'page callback' => 'fsp_join_wizard',
      'access arguments' => array('access content'),
  );
  return $items;
}

function fsp_join_wizard() {
  $step = arg(1);
  $fpath = drupal_get_path('module', 'fsp_join');
  ctools_include('wizard');
  ctools_include('object-cache');
  drupal_add_css($fpath . '/css/fsp_join.css');

  $form_info = array(
      'id' => 'fsp-join-wizard',
      'path' => "fsp_join_wizard/%step",
      'show trail' => TRUE,
      'show back' => TRUE,
      'show cancel' => FALSE,
      'show return' => FALSE,
      'next callback' =>  'fsp_join_wizard_next',
      'finish callback' => 'fsp_join_wizard_finish',
      'cancel callback' => 'fsp_join_wizard_cancel',
      'order' => array(
        'start' => t('User and email'),
        'privacy' => t('Privacy and info'),
        'address' => t('Address'),
        'pledge' => t('Pledge'),
        'confirm' => t('Confirmation'),
        ),
      'forms' => array(
        'start'   =>  array(
          'form id' => 'fsp_join_step_start',
          'include' => $fpath . '/forms/start.form.inc',
          'title'   => 'Create account',
          ),
        'privacy' =>  array(
          'form id' => 'fsp_join_step_privacy',
          'include' => $fpath . '/forms/privacy.form.inc',
          'title'   => 'Newsletter & Privacy',
          ),
        'address' =>  array(
          'form id' => 'fsp_join_step_address',
          'include' => $fpath . '/forms/address.form.inc',
          'title'   => 'Contact Info',
          ),
        'pledge'  =>  array(
          'form id' => 'fsp_join_step_pledge',
          'include' => $fpath . '/forms/pledge.form.inc',
          'title'   => 'Sign the Pledge',
          ),
        'confirm'  =>  array(
          'form id' => 'fsp_join_step_confirm',
          'include' => $fpath . '/forms/confirm.form.inc',
          'title'   => 'Confirmation',
          ),
        ),
      );

  $form_state = array( 'cache name' => NULL, );

  // no matter the step, load the values from the callback page
  $data = fsp_join_get_page_cache(NULL);

  if (!$data) {
    // set form to first step
    $step = current(array_keys($form_info['order']));
    $data = new stdClass();
    ctools_object_cache_set('fsp_join_data', $form_state['cache name'], $data);
  }

  $form_state['data_obj'] = $data;


  //drupal_set_message( '<pre>'.print_r($data, true).'</pre>');

  $output = ctools_wizard_multistep_form($form_info, $step, $form_state);
  return $output;
}

// ctools multistep callbacks

function fsp_join_wizard_next(&$form_state) { 
  $data = $form_state['data_obj'];
  $cache = ctools_object_cache_set('fsp_join_data', $form_state['cache name'], $data);
}

function fsp_join_wizard_cancel(&$form_state) { }

function fsp_join_wizard_finish(&$form_state) {
  module_load_include('inc', 'user', 'user.pages');
  $data = $form_state['data_obj'];
  $data->pass = user_password();
  $proposed_name = sprintf('%s %s', $data->firstname, $data->lastname);
  $count = db_result(db_query("SELECT count(name) FROM {users} WHERE name like '%s%%';", $proposed_name));
  if ($count > 0) {
    $proposed_name = sprintf("%s %s", $proposed_name, $count + 1);
  }
  $data->name = $proposed_name;

  $roles[13] = 'pending';
  if (0 == $data->pledge) {
      $roles[32] = 'friend';
  } else {
      $roles[30] = 'participant';
  }

  // Save user as pending, get uid
  $user_array = array(
    'name'=>$data->name,
    'pass'=>$data->pass,
    'mail'=>$data->mail,
    'status'=>1,
    'roles'=>$roles,
  );

  $account = user_save(NULL, $user_array);
  /* debugging
  */
  if (!$account || $account->uid < 28585) {
    dsm(array('user_array'=>$user_array, 'account'=>$account));
    drupal_goto('fsp_join_wizard/confirm');
  }
  /* */

  // Save rolodex
  $rolodex = new stdClass();
  $rolodex->type = 'rolodex';
  $rolodex->title = $data->name;
  $rolodex->uid = $account->uid;
  $rolodex->created = time();
  $rolodex->changed = $rolodex->created;
  $rolodex->status = 1;
  $rolodex->promote = 0;
  $rolodex->field_fsp_first_name[0]['value'] = $data->firstname;
  $rolodex->field_fsp_last_name[0]['value'] = $data->lastname;
  $rolodex->field_fsp_home_phone[0]['value'] = $data->phone;
  $rolodex->field_fsp_address_1[0]['value'] = $data->address1;
  $rolodex->field_fsp_address_2[0]['value'] = $data->address2;
  $rolodex->field_fsp_city[0]['value'] = $data->city;
  $rolodex->field_fsp_state[0]['value'] = $data->state;
  $rolodex->field_fsp_country[0]['value'] = $data->country;
  $rolodex->field_fsp_postal_code[0]['value'] = $data->postal_code;
  $rolodex->field_fsp_referral[0]['value'] = $data->referral;
  try {
    node_save($rolodex);
  } catch (Exception $e) {
    dsm($e->getMessage());
  }

  // Save participant
  $participant = new stdClass();
  $participant->type = 'participant';
  $participant->title = $data->name;
  $participant->uid = $account->uid;
  $participant->created = time();
  $participant->changed = $participant->created;
  $participant->status = 1;
  $participant->promote = 0;
  if (0 == $data->pledge) {
    // Just a friend of the project.
  } else {
    // New participant!
    $participant->field_fsp_soi[0]['value'] = 1;
    switch ($data->threshold) {
      case '0':
        $participant->field_fsp_movers_check[0]['value'] = 1;
        $participant->field_fsp_movers_year[0]['value'] = "1970";
        $participant->field_fsp_movers[0]['value'] = 20000;
        break;
      case '1':
        $participant->field_fsp_movers_check[0]['value'] = 1;
        $participant->field_fsp_movers_year[0]['value'] = "1970";
        $participant->field_fsp_movers[0]['value'] = 15000;
        break;
      case '2':
        $participant->field_fsp_year_check[0]['value'] = 1;
        $participant->field_fsp_year[0]['value'] = date("%Y") + 5;
        break;
    }
    $participant->field_fsp_firearms = $data->firearms;
    $participant->field_fsp_realid = $data->realid;
    $participant->field_fsp_healthcare = $data->healthcare;
  }
  try {
    node_save($participant);
  } catch (Exception $e) {
    dsm($e->getMessage());
  }

  // clear object data
  ctools_include('object-cache');
  ctools_object_cache_clear('fsp_join_data', $form_state['cache name']);

  if (0 == $data->pledge) {
    drupal_goto('friend');
  } else {
    drupal_goto('community/welcome');
  }
}

function fsp_join_get_page_cache($name) {
  $cache = ctools_object_cache_get('fsp_join_data', $name);
  return $cache;
}
